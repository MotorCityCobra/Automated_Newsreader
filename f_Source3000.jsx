var p = app.project.item(1)function wv(itm, media, local){    var p = app.project.item(itm)    p.openInViewer()    zuz = 250 * (Math.random() * (0.9585 - 0.987654) + 0.987654)    p.layer(2).outPoint = zuz    p.layer(3).inPoint = zuz    if (media == 'art'){        for(var z = 1; z < 3; z++){            var myFolder = new Folder("~/Documents/deep_news/NewsFiles/!WikiArt/"+local+"/"+z+"/").getFiles("*.jpg")            p.layers.add(app.project.importFile(new ImportOptions(myFolder[0])));            var myFolder = new Folder("~/Documents/deep_news/NewsFiles/!WikiArt/"+local+"/"+z+"/").getFiles("*.wav")            p.layers.add(app.project.importFile(new ImportOptions(myFolder[0])));            }        }    if (media == 'poems'){        for(var z = 1; z < 3; z++){            var myFolder = new Folder("~/Documents/deep_news/NewsFiles/!Poem_files/"+local+"/"+z+"/").getFiles("*.jpg")            p.layers.add(app.project.importFile(new ImportOptions(myFolder[0])));            var myFolder = new Folder("~/Documents/deep_news/NewsFiles/!Poem_files/"+local+"/"+z+"/").getFiles("*.wav")            p.layers.add(app.project.importFile(new ImportOptions(myFolder[0])));            }        }    p.layer(2).duplicate()    p.layer(5).duplicate()    //Move clips by x amount of time    adjust = p.layer(8).outPoint - p.layer(1).outPoint    p.layer(1).startTime = adjust - 1    adjust2 = p.layer(9).inPoint - p.layer(4).inPoint    p.layer(4).startTime = adjust2 + 1    p.layer(2).moveAfter(p.layer(8))    p.layer(4).moveAfter(p.layer(9))    function window(x, uno_duce){        var myLayer = p.layer(x);        if (uno_duce == 1){                myLayer.inPoint = p.layer(1).inPoint                myLayer.outPoint = p.layer(6).outPoint}        if (uno_duce == 2){                myLayer.inPoint = p.layer(3).inPoint                myLayer.outPoint = p.layer(3).outPoint}        var key = myLayer.property("ADBE Transform Group").property("ADBE Position")        key.addKey(myLayer.inPoint)        key.addKey(myLayer.outPoint)        if (myLayer.width > (myLayer.height * (504/375))){            var sc = 105 * 375 / myLayer.height            myLayer.scale.setValue([sc, sc])            x1 = (375 / myLayer.height) * myLayer.width * 0.5            x2 = 504 - x1            key.setValueAtKey(1, [x1 + 60, 324])            key.setValueAtKey(2, [x2 + 60, 324])            }        if ((myLayer.width < (myLayer.height * (504/375))) || (myLayer.width == (myLayer.height * (504/375)))){            var sc = 105 * 504 / myLayer.width            myLayer.scale.setValue([sc, sc])            y1 = ((504 / myLayer.width) * myLayer.height * 0.5)            y2 = 375 - y1            key.setValueAtKey(1, [326, y1 + 128])            key.setValueAtKey(2, [326, y2 + 128])            }        myLayer.rotation.setValue([2])        //myLayer.position.setValue([311, 324.0])        p.layer(x).trackMatteType = TrackMatteType.ALPHA    }    window(7, 1)    window(9, 2)    p.layer(2).enabled = false    p.layer(4).enabled = false    function opac(x, y, z){        var lar = p.layer(x)        var inner = lar.inPoint        var outer = lar.outPoint        lar.property("Opacity").setValueAtTime(inner, 0)        lar.property("Opacity").setValueAtTime(inner + y, z)        lar.property("Opacity").setValueAtTime(outer - y, z)        lar.property("Opacity").setValueAtTime(outer, 0)        }    opac(7, 3, 52)    opac(9, 3, 52)    function sliders(x){        pho_len = (p.layer(x-1).outPoint - p.layer(x-1).inPoint) * 0.32        //        //        //        //        //        //        // ADJUSTMENTS FOR ART OPTION MORE SLIDING HERE        //        //        //        //        //        inner = (p.layer(x-1).inPoint + pho_len) * (Math.random() * (1.01 - 1.001) + 1.001)        outer = inner + pho_len * (Math.random() * (1.2 - 0.97) + 0.97) + 7        p.layer(x).inPoint = inner        p.layer(x).outPoint = outer        var myLayer = p.layer(x)        var key = myLayer.property("ADBE Transform Group").property("ADBE Position")        key.addKey(inner)        key.addKey(outer)        if (myLayer.width > (myLayer.height * (4/3))){            var sc = 100 * 720 / myLayer.height            var mysc = myLayer.scale;            mysc.setValue([sc, sc])            x1 = (720 / myLayer.height) * myLayer.width * 0.5            x2 = 960 - x1            key.setValueAtKey(1, [x1, 360])            key.setValueAtKey(2, [x2, 360])            }        if ((myLayer.width < (myLayer.height * (4/3))) || (myLayer.width == (myLayer.height * (4/3)))){            var sc = 100 * 960 / myLayer.width            var mysc = myLayer.scale;            mysc.setValue([sc, sc])            y1 = (960 / myLayer.width) * myLayer.height * 0.5            y2 = 720 - y1            key.setValueAtKey(1, [480, y1])            key.setValueAtKey(2, [480, y2])        }        opac(x, 3, 100)    }    sliders(2)    sliders(4)    if (media == 'poems'){        //Bumper AUDIO        // NEW NEW NEW brb[0]: cheese[1]: hello, im stac [3]: out_pleasant [4]: synth [7]        var myFolder = new Folder("~/Documents/deep_news/bumper audio/poems/").getFiles("*.wav")        for(var i = 0; i < 4; i++){            p.layers.add(app.project.importFile(new ImportOptions(myFolder[[3, 0, 7, 7][i]])))            }        }    if (media == 'art'){        //Bumper AUDIO        // NEW NEW NEW brb[0]: cheese[1]: hello, im stac [3]: out_pleasant [4]: synth [7]        var myFolder = new Folder("~/Documents/deep_news/bumper audio/art_photos/").getFiles("*.wav")        for(var i = 0; i < 4; i++){            p.layers.add(app.project.importFile(new ImportOptions(myFolder[[3, 0, 7, 7][i]])))            }        }    //Bumper VIDEO: murca[0]; intro[1]; jap_sat[2]; brb[3]; trud_chars[4]    var myFolder = new Folder("~/Documents/deep_news/bumper_video/").getFiles("*.mov")    for(var i = 0; i < 2; i++){        p.layers.add(app.project.importFile(new ImportOptions(myFolder[[1, 3][i]])));    }    p.layer(6).startTime = p.layer(7).inPoint + (p.layer(6).inPoint - p.layer(6).outPoint - 1)    p.layer(2).startTime = p.layer(6).inPoint + (p.layer(2).inPoint - p.layer(2).outPoint)    p.layer(3).startTime = p.layer(2).inPoint    p.layer(5).startTime = p.layer(9).outPoint + 1    p.layer(1).startTime = p.layer(5).outPoint    p.layer(4).startTime = p.layer(1).outPoint + (p.layer(4).inPoint - p.layer(4).outPoint)    p.workAreaStart = p.layer(2).inPoint    p.workAreaDuration = p.layer(1).outPoint - p.layer(2).inPoint    //convert audio to keyframes    app.executeCommand(5026)    var t = 'temp = thisComp.layer(1).effect("Both Channels")("Slider") * 0.33; [position[0], position[1] + temp]'    app.project.item(1).layer(12).property("Position").expression = t    //crop work area    app.executeCommand(2360)    //Begin redering    for (var i = 0; i < 4; i++){        p.layer([9, 11, 14, 16][i]).enabled = false        }    app.project.renderQueue.items.add(app.project.item(1))    tmpj = '/Users/anthonycelio/xx/c/c'    app.project.renderQueue.item(1).outputModule(1).applyTemplate(tmpj)    app.project.renderQueue.item(1).setSettings({"Resolution": "Half"})    app.project.renderQueue.item(1).outputModule(1).file = new File(tmpj)    app.beginSuppressDialogs()    app.project.renderQueue.render();    app.endSuppressDialogs(false);    for (var i = 0; i < 4; i++){        p.layer([9, 11, 14, 16][i]).enabled = true        p.layer(12).enabled = false        }    var myFolder = new File("/Users/anthonycelio/xx/c/c.mov")    p.layers.add(app.project.importFile(new ImportOptions(myFolder)));    p.layer(1).property("Transform").property("Scale").setValue([200, 200])    p.layer(1).moveAfter(p.layer(17))}wv(1, 'art', '111')app.project.renderQueue.items.add(app.project.item(1))tmpj = '/Users/anthonycelio/xx/c/c'app.project.renderQueue.item(2).outputModule(1).applyTemplate(tmpj)app.project.renderQueue.render()